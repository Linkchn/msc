#!/usr/bin/env python
#
# Copyright 2016 Chris Cummins <chrisc.101@gmail.com>.
#
# This file is part of CLgen.
#
# CLgen is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CLgen is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CLgen.  If not, see <http://www.gnu.org/licenses/>.
#
import clgen
from clgen import cli

__description__ = """
Generate OpenCL programs using Deep Learning.

This is a five-step process:
   1. Input files are collected from the model specification file.
   2. The input files are preprocessed into an OpenCL kernel database.
   3. A training corpus is generated from the input files.
   4. A model is instantiated and trained on the corpus.
   5. The trained model is sampled for new kernels.

This program automates the execution of all five stages of the pipeline.
The pipeline can be interrupted and resumed at any time.
"""


def main():
    parser = cli.ArgumentParser(description=__description__)
    parser.add_argument("model", metavar="<model>",
                        help="path to model dist or specification file")
    parser.add_argument("sampler", metavar="<sampler>",
                        help="path to sampler specification file")
    args = parser.parse_args()

    cli.main(clgen.main, args.model, args.sampler)


if __name__ == "__main__":
    main()
